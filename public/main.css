/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

* {
  -webkit-font-smoothing: antialiased;
}

.home {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.home__title {
  font-family: "VG5000";
  font-size: 20rem;
}

.home__scroll {
  position: relative;
  height: 6rem;
  width: 100vw;
  top: 50vw;
  border-top: solid 1px #fafafa;
  border-bottom: solid 1px #fafafa;
  display: flex;
}

.home__scroll__container:nth-child(1) {
  -webkit-animation: marquee-mobile 15s linear infinite;
  animation: marquee-mobile 15s linear infinite;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  will-change: transform;
  text-align: right;
  /* animation properties */
  -moz-transform: translateX(-100%);
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%);
  -moz-animation: my-animation 12s linear infinite;
  -webkit-animation: my-animation 12s linear infinite;
  animation: my-animation 12s linear infinite;
}

.home__scroll p {
  color: #fafafa;
  padding-right: 5rem;
  font-family: Montreal-book, sans-serif;
  font-size: 6rem;
  white-space: nowrap;
}

.header {
  position: fixed;
  z-index: 10;
  right: calc(max(20px, 4vmin) * 2);
  top: calc(max(20px, 4vmin) * 2);
}

.header__title {
  font-size: 10rem;
  font-family: "bosch";
  margin: -0.1em 0 0 -0.04em;
  font-weight: 200;
  text-transform: uppercase;
  color: #0b0b0b;
}

.home__link {
  position: fixed;
  z-index: 10;
  left: calc(max(20px, 4vmin) * 2);
  top: calc(max(20px, 4vmin) * 2);
}

.home__link__title {
  font-size: 4rem;
  font-family: "bosch";
  margin: -0.1em 0 0 -0.04em;
  font-weight: 200;
  text-transform: lowercase;
  color: #0b0b0b;
}

.home__link__title a {
  text-decoration: none;
  color: #0b0b0b;
}

@font-face {
  font-family: "bosch";
  src: url(20f794f93834cc7542c1.eot);
  src: url(20f794f93834cc7542c1.eot?#iefix) format("embedded-opentype"), url(9f84e3ecf7f5e1de9de0.woff2) format("woff2"), url(735c8d37ff331545d4e2.woff) format("woff"), url(5ed6054f8db10a618348.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "montchauvemedium";
  src: url(40d12984aaeb58b9bc1b.eot);
  src: url(40d12984aaeb58b9bc1b.eot?#iefix) format("embedded-opentype"), url(032932a01312afa70115.woff2) format("woff2"), url(2ce6c3107ef62df212e5.woff) format("woff"), url(befb8ee0492ba2bf3973.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "solide_miragemono";
  src: url(3d7ce4c24df1348cf011.eot);
  src: url(3d7ce4c24df1348cf011.eot?#iefix) format("embedded-opentype"), url(2fbe5e76cfd1f2f80ce1.woff2) format("woff2"), url(9e658d45aa2b43e99be5.woff) format("woff"), url(b1d80437ad6b0f7a8aea.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "VG5000";
  src: url(3c08411f29a6e7cf3df8.eot);
  src: url(3c08411f29a6e7cf3df8.eot?#iefix) format("embedded-opentype"), url(87e73b967e1ee650a81b.woff) format("woff"), url(81011e55efe050fd7ced.woff2) format("woff2"), url(cb1da24093f084227067.ttf) format("truetype");
  font-weight: normal;
  font-style: normal;
}
html {
  background: whitesmoke;
  color: black;
  font-size: 0.5208333333vw;
  line-height: 1;
  overflow: hidden;
  position: fixed;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  position: fixed;
}

.frame {
  position: fixed;
  z-index: 5;
  left: max(20px, 4vmin);
  right: max(20px, 4vmin);
  top: max(20px, 4vmin);
  bottom: max(20px, 4vmin);
  mix-blend-mode: difference;
  pointer-events: none;
  border-style: solid;
}

.frame__line {
  position: absolute;
  background-color: #000;
  opacity: 0.5;
}

.frame__line__left {
  left: 0;
  top: 0;
  width: 1px;
  height: 100%;
}

.frame__line__right {
  right: 0;
  top: 0;
  width: 1px;
  height: 100%;
}

.frame__line__top {
  left: 0;
  top: 0;
  width: 100%;
  height: 1px;
}

.frame__line__bottom {
  left: 0;
  bottom: 0;
  width: 100%;
  height: 1px;
}

.home__container__1 {
  position: relative;
  display: flex;
  width: 100%;
  height: 25%;
  margin-top: 0%;
  border-bottom: solid 1px #0b0b0b;
  align-items: center;
}

.home__container__2 {
  position: relative;
  display: flex;
  width: 100%;
  height: 25%;
  margin-top: 0%;
  border-bottom: solid 1px #0b0b0b;
  align-items: center;
}

.home__container__3 {
  position: relative;
  display: flex;
  width: 100%;
  height: 25%;
  margin-top: 0%;
  border-bottom: solid 1px #0b0b0b;
  align-items: center;
}

.home__container__4 {
  position: relative;
  display: flex;
  width: 100%;
  height: 25%;
  margin-top: 0%;
  align-items: center;
}

/*
$raw-sienna: #b85e00;
$apricot-yellow: #ffe600;
$benzol-green: #00d973;
$deep-lyons-blue: #0024cc;
*/
.home__container__1:hover {
  background-color: #ffe600;
}

.home__container__2:hover {
  background-color: #0024cc;
}

.home__container__3:hover {
  background-color: #00d973;
}

.home__container__4:hover {
  background-color: #b85e00;
}

.home__title {
  color: black;
  position: absolute;
  padding-left: max(20px, 4vmin);
  overflow: hidden;
  text-transform: uppercase;
  align-items: center;
}

.home__title a {
  text-decoration: none;
}

.home__title h1 {
  color: #0b0b0b;
}

.l__content {
  display: flex;
  flex-direction: row;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  background-color: #0b0b0b;
  overflow-x: hidden !important;
  will-change: transform;
}

.page {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  white-space: nowrap;
}

.background {
  position: fixed;
  display: flex;
  z-index: 1;
  width: 100%;
  height: 100%;
  /*
  left: $frame-padding;
  right: $frame-padding;
  top: $frame-padding;
  bottom: $frame-padding;
  */
  pointer-events: none;
  overflow: hidden;
}

.home {
  background-size: cover;
  overflow: hidden;
  text-align: center;
}

.highlight {
  left: 0;
  line-height: 70px;
  margin-top: -100px;
  position: absolute;
  text-align: center;
  top: 50%;
  width: 100%;
  height: 150px;
  overflow: scroll;
}

.highlight p {
  font-family: "VG5000";
  font-size: 2rem;
  font-weight: 300;
}

* {
  box-sizing: border-box;
}

.notes__container {
  position: fixed;
  z-index: 10;
  left: max(60px, 12vmin);
  right: max(60px, 12vmin);
  top: 30%;
  bottom: max(60px, 12vmin);
  display: grid;
  grid-template-columns: repeat(4, 25%);
  grid-template-rows: repeat(2, 50%);
  margin-left: 4rem;
  margin-right: 4rem;
  overflow: scroll;
  border: 1px solid black;
}

/* Float four columns side by side */
.notes__cell__top {
  float: left;
  border-right: 1px solid #0b0b00;
  border-bottom: 1px solid #0b0b00;
}

.notes__cell__top__right {
  float: left;
  border-bottom: 1px solid #0b0b00;
}

.notes__cell__bottom {
  float: left;
  border-right: 1px solid #0b0b00;
}

.notes__cell__bottom__right {
  float: left;
}

/* Remove extra left and right margins, due to padding in columns */
.notes__row {
  display: flex;
  margin: 1rem;
  justify-content: center;
}

/* Clear floats after the columns */
.notes__row:after {
  content: "";
  display: table;
  clear: both;
}

/* Style the counter cards */
.notes__card {
  overflow: hidden;
  text-align: center;
  justify-content: center;
  border: 1px solid;
  display: flex;
}

.notes__card__title {
  font-size: 6rem;
  font-family: "VG5000";
  z-index: 1;
  position: relative;
  margin: auto;
}

.notes__card:hover {
  background-color: var(--backgroundColor);
}

/* Responsive columns - one column layout (vertical) on small screens */
@media screen and (max-width: 600px) {
  .notes__column {
    width: 100%;
    display: block;
    margin-bottom: 20px;
    padding-left: max(40px, 8vmin);
    padding-right: max(40px, 8vmin);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/